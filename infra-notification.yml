# Spring
spring:
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS:localhost:9092,localhost:9093}
    consumer:
      group-id: notification-service-group

# Topic Names

order:
  events:
    topic:
      created: order-created-events
      shipped: order-shipped-events
      cancelled: order-cancelled-events
inventory:
  events:
    topic:
      reserved: inventory-reserved-events
      depleted: inventory-depleted-events

eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    hostname: infra-notification.order-dev.svc.cluster.local
    non-secure-port: 80
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:9102/eureka/}

server:
  port: 9090
logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%t] %X{className}::%X{methodName} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: refresh